/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mathmethods;

// File Name: mainMethodsForm.java
// Programmer: David Guo
// Date: 24 July 2019
// Description: Contains the code for Unit 6 Assignment math methods. Creates a jframe and handles user inputs with 5 math class methods and 2 custom methods.
import java.lang.Math;

public class mathMethodsForm extends javax.swing.JFrame {

    /**
     * Creates new form mathMethodsForm
     */
    public mathMethodsForm() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblRemainder1 = new javax.swing.JTextField();
        lblRemainder2 = new javax.swing.JTextField();
        remainderButton = new javax.swing.JButton();
        hypotButton = new javax.swing.JButton();
        logButton = new javax.swing.JButton();
        randomButton = new javax.swing.JButton();
        compareButton = new javax.swing.JButton();
        primeButton = new javax.swing.JButton();
        derivativeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblHypot1 = new javax.swing.JTextField();
        lblHypot2 = new javax.swing.JTextField();
        logInput = new javax.swing.JTextField();
        randomInput = new javax.swing.JTextField();
        lblCompare1 = new javax.swing.JTextField();
        lblCompare2 = new javax.swing.JTextField();
        lblPrime = new javax.swing.JTextField();
        lblDerivative = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        remainderAnswerDisplay = new javax.swing.JTextField();
        hypotAnswerDisplay = new javax.swing.JTextField();
        logAnswerDisplay = new javax.swing.JTextField();
        randomAnswerDisplay = new javax.swing.JTextField();
        compareAnswerDisplay = new javax.swing.JTextField();
        primeAnswerDisplay = new javax.swing.JTextField();
        derivativeAnswerDisplay = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 255));
        jLabel1.setText("Math Methods Calculator");

        remainderButton.setText("Calculate");
        remainderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remainderButtonActionPerformed(evt);
            }
        });

        hypotButton.setText("Calculate");
        hypotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hypotButtonActionPerformed(evt);
            }
        });

        logButton.setText("Calculate");
        logButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logButtonActionPerformed(evt);
            }
        });

        randomButton.setText("Calculate");
        randomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomButtonActionPerformed(evt);
            }
        });

        compareButton.setText("Calculate");
        compareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareButtonActionPerformed(evt);
            }
        });

        primeButton.setText("Calculate");
        primeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primeButtonActionPerformed(evt);
            }
        });

        derivativeButton.setText("Calculate");
        derivativeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derivativeButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Remainder (num1, num2)");

        logInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel3.setText("Hypotneuse (side 1, side 2)");

        jLabel4.setText("Natural Logarithm (number)");

        jLabel5.setText("Random Int(ceiling num)");

        jLabel6.setText("Greater Value (num1, num2)");

        jLabel7.setText("Largest Prime (ceiling num)");

        jLabel8.setText("Monomial Derivative (ax^n)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRemainder1)
                            .addComponent(lblHypot1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCompare1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRemainder2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblHypot2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCompare2)))
                    .addComponent(lblDerivative, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logInput)
                    .addComponent(randomInput)
                    .addComponent(lblPrime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(derivativeButton)
                        .addGap(18, 18, 18)
                        .addComponent(derivativeAnswerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hypotButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(remainderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(randomButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(compareButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(compareAnswerDisplay)
                            .addComponent(randomAnswerDisplay)
                            .addComponent(hypotAnswerDisplay)
                            .addComponent(logAnswerDisplay)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(remainderAnswerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(primeButton)
                        .addGap(18, 18, 18)
                        .addComponent(primeAnswerDisplay)))
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(265, 265, 265))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRemainder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRemainder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(remainderButton)
                            .addComponent(jLabel2)
                            .addComponent(remainderAnswerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hypotButton)
                            .addComponent(lblHypot1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHypot2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(hypotAnswerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(logButton)
                            .addComponent(logInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(logAnswerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(randomButton)
                            .addComponent(randomAnswerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(randomInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compareButton)
                    .addComponent(lblCompare1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCompare2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(compareAnswerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(primeButton)
                    .addComponent(lblPrime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(primeAnswerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(derivativeButton)
                    .addComponent(lblDerivative, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(derivativeAnswerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Custom drivative method
    public static String derivativeCalculator(String derivative) {
        // Declare variable and remove unnecessary spaces as well as ^ for splitting
        String derivativeInput = derivative.trim().replace("^", "");
        
        // Split string into an array
        String[] derivativeArray = derivativeInput.split("x");
        
        //Find the a and n values for derivative
        int aValue = Integer.parseInt(derivativeArray[0]);
        int nValue = Integer.parseInt(derivativeArray[1]);
        
        // Declare variable before codeblock
        String derivativeAnswer;
        // Apply constant rule
        // Calculate derivative and convert to string
        if (nValue > 0) {
            derivativeAnswer = (Integer.toString(aValue*nValue)) + "x^" + (Integer.toString(nValue-1));
        }
        else {
            derivativeAnswer = "Derivative will always be 0!";            
        }
        
        // Return value
        return derivativeAnswer;
    }
    
    // Custom prime finder method, finds largest prime less than the ceiling number
    // Not static because text field must be accessed
    // Method doesn't return anything
    public void primeCalculator(long ceilingNum) {
        // Initializing variables
        long primeAnswer = 0;
        long ceiling = ceilingNum;
            // Main loop, iterates every number from one less than the ceiling to 1 
            for (long i = ceiling-1; i > 1; i--) { 
                // Prime loop, starts at the lowest prime, iterates by 1 to the half of i (largest factor)
                // Checks if i is a prime, by dividing it by every j value
                for (long j = 2; j <= i; j++) {
                   
                    // Handling specific case in which ceiling is i < 6, and iterating to i/2 will not work
                    if (i < 6 && j == i) {
                        primeAnswer = i;
                        break;
                    }
                    
                     // Divides i by j, if this evaluates to true, then i is not a prime, and the prime loop exits 
                    else if (i% j == 0) {
                        break;
                    }
                    // Once loop has iterated to i/2, then i will be a prime
                    // Sets displayed value to i, and exits the loop
                    else if (j == i/2) {
                        primeAnswer = i;
                        break;
                        }
                    }
                // Since the non prime condition also exits the loop, this statement makes sure that a prime has been found
                if (primeAnswer > 0) {
                    break;
                
                }
            }
        // Displays the prime in a text field
        primeAnswerDisplay.setText("Prime: " + primeAnswer);
    }  
    private void remainderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remainderButtonActionPerformed
        // Calculating IEEE remainder, converting from string to double
        Double remainderAnswer = Math.IEEEremainder(Double.parseDouble(lblRemainder1.getText()), Double.parseDouble(lblRemainder2.getText()));
        // Displaying answer in text field
        remainderAnswerDisplay.setText("Answer: " + Double.toString(remainderAnswer));
    }//GEN-LAST:event_remainderButtonActionPerformed

    private void hypotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hypotButtonActionPerformed
        // Calculating hypotneuse given two legs, converting from string to double
        Double hypotAnswer = Math.hypot(Double.parseDouble(lblHypot1.getText()), Double.parseDouble(lblHypot2.getText()));
        // Displaying answer in text field
        hypotAnswerDisplay.setText("Answer: " + Double.toString(hypotAnswer));
    }//GEN-LAST:event_hypotButtonActionPerformed

    private void logButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logButtonActionPerformed
        // Calculating natural logarithm given a number, converting from string to double
        Double logAnswer = Math.log(Double.parseDouble(logInput.getText()));
        // Displaying answer in text field
        logAnswerDisplay.setText("Answer: " + Double.toString(logAnswer));
    }//GEN-LAST:event_logButtonActionPerformed

    private void randomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomButtonActionPerformed
       // Calculating random int given a ceiling, converting from string to double
       // Getting random double, multiplying by ceiling, then rounding 
        Long randomAnswer = Math.round((Math.random()*(Long.parseLong(randomInput.getText()))));
        // Displaying answer in text field
        randomAnswerDisplay.setText("Answer: " + Long.toString(randomAnswer));
    }//GEN-LAST:event_randomButtonActionPerformed

    private void compareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareButtonActionPerformed
        // Calculating greater of two numbers converting from string to double
        Double compareAnswer = Math.max(Double.parseDouble(lblCompare1.getText()), Double.parseDouble(lblCompare2.getText()));
        // Displaying answer in text field
        compareAnswerDisplay.setText("Answer: " + Double.toString(compareAnswer));
    }//GEN-LAST:event_compareButtonActionPerformed

    private void derivativeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derivativeButtonActionPerformed
        // Call custom derivative method
        // Declaring variable outside codeblock
        String derivativeAnswer;
        // Check if this is the first time clicking the button
        if (derivativeAnswerDisplay.getText().length() == 0) {
            // Take string from input field and calculate derivative
            derivativeAnswer = derivativeCalculator(lblDerivative.getText());
        }
        else {
            // Take string from output field and calculate derivative
            derivativeAnswer = derivativeCalculator(derivativeAnswerDisplay.getText());
        }
        // Display answer in text field
        derivativeAnswerDisplay.setText(derivativeAnswer);
        lblDerivative.setText("");
    }//GEN-LAST:event_derivativeButtonActionPerformed

    private void primeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primeButtonActionPerformed
        // Use the custom prime calculator method, and convert from string to long
        primeCalculator(Long.parseLong(lblPrime.getText()));
    }//GEN-LAST:event_primeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mathMethodsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mathMethodsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mathMethodsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mathMethodsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mathMethodsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField compareAnswerDisplay;
    private javax.swing.JButton compareButton;
    private javax.swing.JTextField derivativeAnswerDisplay;
    private javax.swing.JButton derivativeButton;
    private javax.swing.JTextField hypotAnswerDisplay;
    private javax.swing.JButton hypotButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField lblCompare1;
    private javax.swing.JTextField lblCompare2;
    private javax.swing.JTextField lblDerivative;
    private javax.swing.JTextField lblHypot1;
    private javax.swing.JTextField lblHypot2;
    private javax.swing.JTextField lblPrime;
    private javax.swing.JTextField lblRemainder1;
    private javax.swing.JTextField lblRemainder2;
    private javax.swing.JTextField logAnswerDisplay;
    private javax.swing.JButton logButton;
    private javax.swing.JTextField logInput;
    private javax.swing.JTextField primeAnswerDisplay;
    private javax.swing.JButton primeButton;
    private javax.swing.JTextField randomAnswerDisplay;
    private javax.swing.JButton randomButton;
    private javax.swing.JTextField randomInput;
    private javax.swing.JTextField remainderAnswerDisplay;
    private javax.swing.JButton remainderButton;
    // End of variables declaration//GEN-END:variables
}
